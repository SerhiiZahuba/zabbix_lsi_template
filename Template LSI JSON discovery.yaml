zabbix_export:
  version: '6.4'
  template_groups:
    - uuid: 040d20d408f447c4a041176b8604e5e9
      name: 'Templates/storage controllers'
  templates:
    - uuid: 159a9294c5a54f7185b0bb3a34fcfb2e
      template: 'Template LSI json discovery'
      name: 'Template LSI json discovery'
      groups:
        - name: 'Templates/storage controllers'
      items:
        - uuid: a46209a841e84b6b830ebf9b008abeec
          name: 'PD show all command'
          type: DEPENDENT
          key: lsi.pd.command
          delay: '0'
          history: '{$DEFAULT_HISTORY_PERIOD}'
          trends: '0'
          value_type: TEXT
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  if (value !== 'No Controller found'){
                  var firstAnyEid = (value.match(/("EID:Slt"\s*:\s")(.*):(.*)/))[0].match(/("EID:Slt"\s*:\s")(.*):(.*)/)[2];
                  var PDGetLine = (/\d{1,}/.test(firstAnyEid)) ? '/call/eall/sall':
                  '/call/sall';
                  return PDGetLine;
                  }
                  else return value;
            - type: DISCARD_UNCHANGED
              parameters:
                - ''
          master_item:
            key: 'ssh.run[lsi.ctlsinfo]'
          tags:
            - tag: Application
              value: 'LSI Internal items'
          triggers:
            - uuid: fcb4fcb9731240e1b653218509460b6d
              expression: 'find(/Template LSI json discovery/lsi.pd.command,,,"No Controller found")=1'
              name: 'LSI: no controllers found with ''''{$LSI_CLI}"'
              priority: INFO
              manual_close: 'YES'
              tags:
                - tag: TEST
                  value: 'YES'
            - uuid: 05a980d939954ae4a2b508b0ff1c14f0
              expression: 'find(/Template LSI json discovery/lsi.pd.command,,"iregexp","{$LSI_PD_COMMAND}")=0 and find(/Template LSI json discovery/lsi.pd.command,,"iregexp","No Controller found")=0'
              name: 'LSI controller is needed "{ITEM.VALUE}" instead of "{$LSI_PD_COMMAND}" parameter for getting PDs info'
              description: 'Checking /call show all output and have to change default LSI_PD_COMMAND macro value'
              manual_close: 'YES'
              tags:
                - tag: ACTION
                  value: 'Change macro value on host'
                - tag: MACRONAME
                  value: LSI_PD_COMMAND
                - tag: MACROVALUE
                  value: '{ITEM.VALUE}'
                - tag: NOTIFY
                  value: 'NO'
                - tag: SOURCE
                  value: 'LSI PD getting param'
        - uuid: 51530e7c8a8a499e8d6f6bb3eda5e18b
          name: 'All Pds LLD info'
          type: DEPENDENT
          key: lsi.SMART.lld
          delay: '0'
          history: '{$DEFAULT_HISTORY_PERIOD}'
          trends: '0'
          value_type: TEXT
          description: test
          preprocessing:
            - type: NOT_MATCHES_REGEX
              parameters:
                - 'No Controller found'
            - type: JAVASCRIPT
              parameters:
                - |
                  var JsonValue = JSON.parse(value);
                  var prejson = [];
                  for (var i = 0; i < (JsonValue.Controllers).length; i++) {
                  var ResponseStatus=JsonValue.Controllers[i]['Command Status']['Status'];
                  if (ResponseStatus.match(/Success/g)) {
                  var ResponseData = JsonValue.Controllers[i]['Response Data'];
                  for (var key in ResponseData) {
                  	var KeySplitted = key.split(' ');
                  	var NeedData = {};
                  	if (KeySplitted.length === 2) {
                  		 NeedData['SLOT'] =  KeySplitted[1];
                  		 NeedData['Controller number'] =  i;
                  		 NeedData['slotname_source'] = 'LSI';
                  		 NeedData['Serial Number'] = ResponseData[key +  " - Detailed Information"][key +  " Device attributes"]['SN'];
                  		 NeedData['Size'] = ResponseData[key][0]['Size'];
                  		 NeedData['Type'] = ResponseData[key][0]['Intf'] + " " + ResponseData[key][0]['Med'];
                  		 NeedData['Disk group'] = ResponseData[key][0]['DG'];
                  		 NeedData['Model'] = ResponseData[key][0]['Model'];
                  		 prejson.push(JSON.stringify(NeedData,null,space=0));
                  	}
                  	else
                  	{
                  	}
                  }
                  }
                  else{
                  prejson.push.JsonValue.Controllers[i]['Description'];
                  }
                  }
                  return("[" + prejson + "]");
            - type: DISCARD_UNCHANGED
              parameters:
                - ''
          master_item:
            key: 'ssh.run[lsi.pdsinfo]'
          tags:
            - tag: Application
              value: 'LSI Internal items'
        - uuid: 299c37b3abee4c94b897639207f069d8
          name: 'All Ctls and LDs Info'
          type: SSH
          key: 'ssh.run[lsi.ctlsinfo]'
          delay: '{$ADAP_REQUEST_PERIOD}'
          history: '0'
          trends: '0'
          value_type: TEXT
          params: 'cd /opt/lsi/storcli && ./storcli /call show all j'
          authtype: PUBLIC_KEY
          username: root
          password: pass_for_key
          publickey: id_rsa.pub
          privatekey: id_rsa
          preprocessing:
            - type: CHECK_REGEX_ERROR
              parameters:
                - 'No Controller found'
                - \0
              error_handler: CUSTOM_VALUE
              error_handler_params: 'No Controller found'
          tags:
            - tag: Application
              value: 'LSI Internal items'
        - uuid: 44494be072cc4171b0bd0a480ca196fb
          name: 'All Pds info'
          type: SSH
          key: 'ssh.run[lsi.pdsinfo]'
          delay: '{$PD_REQUEST_PERIOD}'
          history: '0'
          trends: '0'
          value_type: TEXT
          params: 'cd /opt/lsi/storcli && ./storcli /call/eall/sall show all j'
          authtype: PUBLIC_KEY
          username: root
          password: pass_for_key
          publickey: id_rsa.pub
          privatekey: id_rsa
          preprocessing:
            - type: CHECK_REGEX_ERROR
              parameters:
                - 'No Controller found'
                - \0
              error_handler: CUSTOM_VALUE
              error_handler_params: 'No Controller found'
          tags:
            - tag: Application
              value: 'LSI Internal items'
      discovery_rules:
        - uuid: c4a90c3e66c346b4b923194a6c9ea9f5
          name: 'Controllers discovery'
          type: DEPENDENT
          key: lsi.ctllld
          delay: '0'
          lifetime: 1d
          item_prototypes:
            - uuid: e6487ab2b6c34f1ba3871da92353ca45
              name: 'Controller "{#CTLID}" battery (BBU) low charge level'
              type: DEPENDENT
              key: 'lsi.ctl.bbu.lowcharge.["{#CTLID}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CTLID}][''Response Data''][''BBU_Firmware_Status''][?(@.Property=="Remaining Capacity Low")][''Value''].first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.batteryinfo,{#BATTERY_CMD}]'
              tags:
                - tag: Application
                  value: 'LSI battery'
              trigger_prototypes:
                - uuid: f4f64160f897487299a8b78e6d254448
                  expression: 'find(/Template LSI json discovery/lsi.ctl.bbu.lowcharge.["{#CTLID}"],,"like","No")=0'
                  name: 'LSI: controller "{#CTLID}" battery (BBU) charge level is low'
                  priority: AVERAGE
                  manual_close: 'YES'
                  tags:
                    - tag: SOURCE
                      value: 'LSI storage controller battery charge level'
            - uuid: 39e717cf33f04eca8bd9ebeef00a102e
              name: 'Controller "{#CTLID}" battery (BBU) need to replace'
              type: DEPENDENT
              key: 'lsi.ctl.bbu.replace.["{#CTLID}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CTLID}][''Response Data''][''BBU_Firmware_Status''][?(@.Property=="Replacement required")][''Value''].first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.batteryinfo,{#BATTERY_CMD}]'
              tags:
                - tag: Application
                  value: 'LSI battery'
              trigger_prototypes:
                - uuid: 34851c4210d347a499f916f68a047359
                  expression: 'find(/Template LSI json discovery/lsi.ctl.bbu.replace.["{#CTLID}"],,"iregexp","No|OK")=0'
                  name: 'LSI: controller "{#CTLID}" battery (BBU) is need to be replaced'
                  priority: HIGH
                  manual_close: 'YES'
                  tags:
                    - tag: SOURCE
                      value: 'LSI storage controller battery state'
            - uuid: f63f64ce128f48cda144317925c4efb0
              name: 'Controller "{#CTLID}" battery (BBU) serial number'
              type: DEPENDENT
              key: 'lsi.ctl.bbu.sn.["{#CTLID}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CTLID}][''Response Data''][''BBU_Design_Info''][?(@.Property=="Serial Number")][''Value''].first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.batteryinfo,{#BATTERY_CMD}]'
              tags:
                - tag: Application
                  value: 'LSI battery'
              trigger_prototypes:
                - uuid: e438dce3ea694828be91aca8258c33b1
                  expression: '(last(/Template LSI json discovery/lsi.ctl.bbu.sn.["{#CTLID}"],#1)<>last(/Template LSI json discovery/lsi.ctl.bbu.sn.["{#CTLID}"],#2))=1'
                  recovery_mode: NONE
                  name: 'LSI: controller "{#CTLID}" battery (BBU) was replaced by sn "{ITEM.VALUE}"'
                  priority: INFO
                  manual_close: 'YES'
                  tags:
                    - tag: ACTION
                      value: 'Close with API'
                    - tag: SOURCE
                      value: 'LSI storage controller battery replace'
            - uuid: ccff84248f9e43f680ae3820d4adb968
              name: 'Controller "{#CTLID}" battery (BBU) state'
              type: DEPENDENT
              key: 'lsi.ctl.bbu.state.["{#CTLID}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CTLID}][''Response Data''][''BBU_Info''][0][''State'']'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.ctlsinfo]'
              tags:
                - tag: Application
                  value: 'LSI battery'
              trigger_prototypes:
                - uuid: cd6fd31a268d45819f75fb51814030d9
                  expression: 'find(/Template LSI json discovery/lsi.ctl.bbu.state.["{#CTLID}"],#2,"like","Optimal")=0'
                  name: 'LSI: controller "{#CTLID}" battery (BBU) state is "{ITEM.LASTVALUE}"'
                  priority: HIGH
                  manual_close: 'YES'
                  tags:
                    - tag: SOURCE
                      value: 'LSI storage controller battery state'
            - uuid: a73287d1adae4c2a954e8fcb77cbdbd6
              name: 'Controller "{#CTLID}" battery (BBU) type'
              type: DEPENDENT
              key: 'lsi.ctl.bbu.type.["{#CTLID}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CTLID}][''Response Data''][''BBU_Info''][?(@.Property=="Type")][''Value''].first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.batteryinfo,{#BATTERY_CMD}]'
              tags:
                - tag: Application
                  value: 'LSI battery'
            - uuid: e8104d485ca7406eaa05bb67fe8949bc
              name: 'Controller "{#CTLID}" battery (cache vault) need to replace'
              type: DEPENDENT
              key: 'lsi.ctl.cv.replace.["{#CTLID}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CTLID}][''Response Data''][''Firmware_Status''][?(@.Property==''Replacement required'')][''Value''].first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.batteryinfo,{#BATTERY_CMD},CV]'
              tags:
                - tag: Application
                  value: 'LSI battery'
              trigger_prototypes:
                - uuid: 6e782ad232414f0cb2f32a3858a5491f
                  expression: 'find(/Template LSI json discovery/lsi.ctl.cv.replace.["{#CTLID}"],,"iregexp","No|OK")=0'
                  name: 'LSI: controller "{#CTLID}" battery (cache vault) is need to be replaced'
                  priority: HIGH
                  manual_close: 'YES'
                  tags:
                    - tag: SOURCE
                      value: 'LSI storage controller battery state'
            - uuid: 4b77fec45b3f4b2e84b8d6869cc5d8a1
              name: 'Controller "{#CTLID}" battery (cache vault) serial number'
              type: DEPENDENT
              key: 'lsi.ctl.cv.sn.["{#CTLID}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CTLID}][''Response Data''][''Design_Info''][?(@.Property==''Serial Number'')][''Value''].first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.batteryinfo,{#BATTERY_CMD},CV]'
              tags:
                - tag: Application
                  value: 'LSI battery'
              trigger_prototypes:
                - uuid: cff8885fb404431abcfdcab968531eae
                  expression: '(last(/Template LSI json discovery/lsi.ctl.cv.sn.["{#CTLID}"],#1)<>last(/Template LSI json discovery/lsi.ctl.cv.sn.["{#CTLID}"],#2))=1'
                  recovery_mode: NONE
                  name: 'LSI: controller "{#CTLID}" battery (cache vault) was replaced by sn "{ITEM.VALUE}"'
                  priority: INFO
                  manual_close: 'YES'
                  tags:
                    - tag: ACTION
                      value: 'Close with API'
                    - tag: SOURCE
                      value: 'LSI storage controller battery replace'
            - uuid: 15c4b6e6cd3f4509bfc9f46ee8a5dcec
              name: 'Controller "{#CTLID}" battery (cache vault) state'
              type: DEPENDENT
              key: 'lsi.ctl.cv.state.["{#CTLID}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CTLID}][''Response Data''][''Cachevault_Info''][0][''State'']'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.ctlsinfo]'
              tags:
                - tag: Application
                  value: 'LSI battery'
              trigger_prototypes:
                - uuid: adae400fb0514f9ab66547a752da6f59
                  expression: 'find(/Template LSI json discovery/lsi.ctl.cv.state.["{#CTLID}"],#2,"like","Optimal")=0'
                  name: 'LSI: controller "{#CTLID}" battery (cache vault) state is "{ITEM.LASTVALUE}"'
                  priority: HIGH
                  manual_close: 'YES'
                  tags:
                    - tag: SOURCE
                      value: 'LSI storage controller battery state'
            - uuid: 8895f4a6460948a1a9fc9c9a6cd0dce8
              name: 'Controller "{#CTLID}" battery (cache vault) type'
              type: DEPENDENT
              key: 'lsi.ctl.cv.type.["{#CTLID}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CTLID}][''Response Data''][''Cachevault_Info''][?(@.Property==''Type'')][''Value''].first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.batteryinfo,{#BATTERY_CMD},CV]'
              tags:
                - tag: Application
                  value: 'LSI battery'
            - uuid: 850a5c0d903e4b21a4c88a4c7f828e6a
              name: 'Controller "{#CTLID}" firmware'
              type: DEPENDENT
              key: 'lsi.ctl.fw.["{#CTLID}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CTLID}][''Response Data''][''Version''][''Firmware Version'']'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.ctlsinfo]'
              tags:
                - tag: Application
                  value: 'LSI controllers'
            - uuid: db16176901bb45d585c344474cf9e019
              name: 'Controller "{#CTLID}" model'
              type: DEPENDENT
              key: 'lsi.ctl.model.["{#CTLID}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CTLID}][''Response Data''][''Basics''][''Model'']'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.ctlsinfo]'
              tags:
                - tag: Application
                  value: 'LSI controllers'
            - uuid: e644b1c1bc12484a9f90341e71b3c4b2
              name: 'Controller "{#CTLID}" serial number'
              type: DEPENDENT
              key: 'lsi.ctl.sn.["{#CTLID}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CTLID}][''Response Data''][''Basics''][''Serial Number'']'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.ctlsinfo]'
              tags:
                - tag: Application
                  value: 'LSI controllers'
            - uuid: 9c2ec056c23843c99d5d1acca9850435
              name: 'Controller "{#CTLID}" state (health)'
              type: DEPENDENT
              key: 'lsi.ctl.state.["{#CTLID}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CTLID}][''Response Data''][''Status''][''Controller Status'']'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.ctlsinfo]'
              tags:
                - tag: Application
                  value: 'LSI controllers'
              trigger_prototypes:
                - uuid: 51b7eda3d0824e09b06a6a1da3bc09ab
                  expression: 'find(/Template LSI json discovery/lsi.ctl.state.["{#CTLID}"],,"iregexp","Optimal")=0'
                  name: 'LSI: controller "{#CTLID}" status is "{ITEM.LASTVALUE}"'
                  priority: HIGH
                  manual_close: 'YES'
                  tags:
                    - tag: SOURCE
                      value: 'LSI storage controller state'
            - uuid: 7c3c5c2a1b704b1698972efd3c4da804
              name: 'Controller "{#CTLID}" all battery (cache vault) info'
              type: SSH
              key: 'ssh.run[lsi.batteryinfo,{#BATTERY_CMD},CV]'
              delay: '{$ADAP_BATTERY_REQUEST_PERIOD}'
              history: '0'
              trends: '0'
              value_type: TEXT
              params: 'cd /opt/lsi/storcli && ./storcli /c0/cv show all'
              authtype: PUBLIC_KEY
              username: root
              password: pass_for_key
              publickey: id_rsa.pub
              privatekey: id_rsa
              preprocessing:
                - type: CHECK_REGEX_ERROR
                  parameters:
                    - 'sudo: no password was provided'
                    - \0
              tags:
                - tag: Application
                  value: 'LSI Internal items'
            - uuid: c38b8fc6272840faac72571674234178
              name: 'Controller "{#CTLID}" all battery (BBU) info'
              type: SSH
              key: 'ssh.run[lsi.batteryinfo,{#BATTERY_CMD}]'
              delay: '{$ADAP_BATTERY_REQUEST_PERIOD}'
              history: '0'
              trends: '0'
              value_type: TEXT
              params: 'cd /opt/lsi/storcli && ./storcli /c0/bbu show all'
              authtype: PUBLIC_KEY
              username: root
              password: pass_for_key
              publickey: id_rsa.pub
              privatekey: id_rsa
              preprocessing:
                - type: CHECK_REGEX_ERROR
                  parameters:
                    - 'sudo: no password was provided'
                    - \0
              tags:
                - tag: Application
                  value: 'LSI Internal items'
          master_item:
            key: 'ssh.run[lsi.ctlsinfo]'
          lld_macro_paths:
            - lld_macro: '{#BATTERY_CMD}'
              path: '$.[''Battery command'']'
            - lld_macro: '{#BATTERY_TYPE}'
              path: '$.[''Battery type'']'
            - lld_macro: '{#CTLID}'
              path: '$.[''Controller number'']'
            - lld_macro: '{#HASBATTERY}'
              path: '$.[''Has battery'']'
            - lld_macro: '{#MODEL}'
              path: '$.[''Model'']'
            - lld_macro: '{#SN}'
              path: '$.[''Serial Number'']'
          preprocessing:
            - type: NOT_MATCHES_REGEX
              parameters:
                - 'No Controller found'
            - type: JAVASCRIPT
              parameters:
                - |
                  var JsonValue = JSON.parse(value);
                  var prejson = [];
                  for (var i = 0; i < (JsonValue.Controllers).length; i++) {
                  var NeedData = {};
                  var ResponseStatus=JsonValue.Controllers[i]['Command Status']['Status'];
                  if (ResponseStatus.match(/Success/g)) {
                  	var ResponseData = JsonValue.Controllers[i]['Response Data'];
                  		NeedData['Controller number'] =  i;
                  		NeedData['Has battery'] = "No";
                  		NeedData['Model'] =  ResponseData['Basics']['Model'];
                  		NeedData['Serial Number'] =  ResponseData['Basics']['Serial Number'];
                  		if (ResponseData['HwCfg'].hasOwnProperty('BBU')){
                  			if (ResponseData['HwCfg']['BBU'] === 'Present'){
                  				NeedData['Has battery'] = "Yes";
                  				if (ResponseData.hasOwnProperty('Cachevault_Info')){
                  					NeedData['Battery command'] = ("/c" + i + "/cv");
                  					NeedData['Battery type'] = ("CacheVault");
                  				}
                  				else {
                  					NeedData['Battery command'] = ("/c" + i + "/bbu");
                  					NeedData['Battery type'] = "BBU";
                  				}
                  		}
                  		prejson.push(JSON.stringify(NeedData,null,space=0));
                  	}
                  }
                  else {
                  prejson.push(JsonValue.Controllers[i]['Command Status']['Description']);
                  }
                  }
                  return ("[" + prejson + "]");
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - '{$DEFAULT_LLD_THROTTLING_HB_PERIOD}'
          overrides:
            - name: 'No battery'
              step: '1'
              stop: STOP
              filter:
                conditions:
                  - macro: '{#HASBATTERY}'
                    value: 'No'
                    formulaid: A
              operations:
                - operationobject: ITEM_PROTOTYPE
                  operator: LIKE
                  value: battery
                  discover: NO_DISCOVER
                - operationobject: TRIGGER_PROTOTYPE
                  value: battery
                  discover: NO_DISCOVER
            - name: 'BBU battery'
              step: '2'
              stop: STOP
              filter:
                conditions:
                  - macro: '{#BATTERY_TYPE}'
                    value: BBU
                    formulaid: A
              operations:
                - operationobject: ITEM_PROTOTYPE
                  operator: LIKE
                  value: 'cache vault'
                  discover: NO_DISCOVER
                - operationobject: TRIGGER_PROTOTYPE
                  operator: LIKE
                  value: 'cache vault'
                  discover: NO_DISCOVER
            - name: 'cache vault battery'
              step: '3'
              stop: STOP
              filter:
                conditions:
                  - macro: '{#BATTERY_TYPE}'
                    value: CacheVault
                    formulaid: A
              operations:
                - operationobject: ITEM_PROTOTYPE
                  operator: LIKE
                  value: BBU
                  discover: NO_DISCOVER
                - operationobject: TRIGGER_PROTOTYPE
                  operator: LIKE
                  value: BBU
                  discover: NO_DISCOVER
        - uuid: a9e300ff711a49409a319455abe6c489
          name: 'Logical disks discovery'
          type: DEPENDENT
          key: lsi.ldslld
          delay: '0'
          lifetime: 1d
          item_prototypes:
            - uuid: 644b8093972f47aab0d19fa96d2242d3
              name: 'Logical disk "{#LDNAME}" (id {#LDID})  state'
              type: DEPENDENT
              key: 'lsi.ld.state.["{#LDID}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CONTROLLER}][''Response Data''][''VD LIST''][?(@.[''DG/VD''] == ''{#DGVD}'')][''State''].first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
                - type: JAVASCRIPT
                  parameters:
                    - |
                      switch(value)
                      {
                      case 'Optl':
                      value='Optimal';
                      break;
                      case 'OfLn':
                      value='Offline';
                      break;
                      case 'Pdgd':
                      value='Partially degraded';
                      break;
                      case 'Dgrd':
                      value='Degraded';
                      break;
                      }
                      return value
              master_item:
                key: 'ssh.run[lsi.ctlsinfo]'
              tags:
                - tag: Application
                  value: 'LSI Logical disks'
              trigger_prototypes:
                - uuid: 268a9225366a430dac304865ecb7cb23
                  expression: 'find(/Template LSI json discovery/lsi.ld.state.["{#LDID}"],,"like","Optimal")=0'
                  recovery_mode: RECOVERY_EXPRESSION
                  recovery_expression: 'find(/Template LSI json discovery/lsi.ld.state.["{#LDID}"],,"like","Optimal")=1'
                  name: 'LSI: logical disk "{#LDNAME}" ("{#LDID}") state is "{ITEM.VALUE}"'
                  priority: HIGH
                  manual_close: 'YES'
                  tags:
                    - tag: LDLEVEL
                      value: '{#LDLEVEL}'
                    - tag: SOURCE
                      value: 'LSI LD state'
          master_item:
            key: 'ssh.run[lsi.ctlsinfo]'
          lld_macro_paths:
            - lld_macro: '{#CONTROLLER}'
              path: '$.[''Controller number'']'
            - lld_macro: '{#DGVD}'
              path: $.DGVD
            - lld_macro: '{#LDID}'
              path: $.LDID
            - lld_macro: '{#LDLEVEL}'
              path: $.Level
            - lld_macro: '{#LDNAME}'
              path: $.Name
          preprocessing:
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - '{$DEFAULT_LLD_THROTTLING_HB_PERIOD}'
            - type: JAVASCRIPT
              parameters:
                - |
                  var JsonValue = JSON.parse(value);
                  var prejson = [];
                  var LDRegex = /\/c\d{1,}\/v\d{1,}/;
                  for (var i = 0; i < (JsonValue.Controllers).length; i++) {
                  	var ResponseStatus=JsonValue.Controllers[i]['Command Status']['Status'];
                  	if (ResponseStatus.match(/Success/g)) {
                  		var CtlPrefix = "/c" + i + "/v";
                  		var ResponseData = JsonValue.Controllers[i]['Response Data']['VD LIST'];
                  		for (var j = 0; j < (ResponseData).length; j++) {
                  			var NeedData = {};
                  			NeedData['LDID'] = ResponseData[j]['DG/VD'].replace(/\d{1,}\//,CtlPrefix);
                  			NeedData['DGVD'] = ResponseData[j]['DG/VD'];
                  			NeedData['Name'] = ResponseData[j]['Name'];
                  			NeedData['Controller number'] =  i;
                  			NeedData['Level'] =  ResponseData[j]['TYPE'];
                  			prejson.push(JSON.stringify(NeedData,null,space=0));
                  		}
                  	}
                  	else {
                  		prejson.push(JsonValue.Controllers[i]['Command Status']['Description']);
                  	}
                  }
                  return ("[" + prejson + "]");
        - uuid: 871f602373c34e988df68ade9d6dcbe2
          name: 'Physical disks discovery'
          type: DEPENDENT
          key: lsi.pdlld
          delay: '0'
          lifetime: 1d
          item_prototypes:
            - uuid: c0dff43db6a74113b3c4bcf742ab450a
              name: 'Physical disk "{#SLOT}" media error count'
              type: DEPENDENT
              key: 'lsi.pd.merrcount.["{#SLOT}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CONTROLLER}][''Response Data''][''Drive {#SLOT} - Detailed Information''][''Drive {#SLOT} State''][''Media Error Count'']'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_LLD_THROTTLING_HB_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.pdsinfo]'
              tags:
                - tag: Application
                  value: 'LSI Physical disks'
              trigger_prototypes:
                - uuid: 5c1d65cd1d7a463489bb6bca38c46dc6
                  expression: 'last(/Template LSI json discovery/lsi.pd.merrcount.["{#SLOT}"])>100'
                  recovery_mode: RECOVERY_EXPRESSION
                  recovery_expression: 'last(/Template LSI json discovery/lsi.pd.merrcount.["{#SLOT}"])=0'
                  name: 'LSI: physical disk "{#SLOT}" media error count is "{ITEM.VALUE}"'
                  priority: HIGH
                  manual_close: 'YES'
                  tags:
                    - tag: PDSLOT
                      value: '{#SLOT}'
                    - tag: PDSN
                      value: '{#PDSN}'
                    - tag: PD_CAPACITY
                      value: '{#CAPACITY}'
                    - tag: PD_MODEL
                      value: '{#MODEL}'
                    - tag: PD_TYPE
                      value: '{#PDTYPE}'
                    - tag: SOURCE
                      value: 'LSI PD media error'
            - uuid: 1402664cef144148982b3cf8adcca6fc
              name: 'Physical disk "{#SLOT}" model'
              type: DEPENDENT
              key: 'lsi.pd.model.["{#SLOT}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CONTROLLER}][''Response Data''][''Drive {#SLOT} - Detailed Information''][''Drive {#SLOT} Device attributes''][''Model Number'']'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.pdsinfo]'
              tags:
                - tag: Application
                  value: 'LSI Physical disks'
            - uuid: ecea501e48f644698794b74f40565775
              name: 'Physical disk "{#SLOT}" other error count'
              type: DEPENDENT
              key: 'lsi.pd.otherrcount.["{#SLOT}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CONTROLLER}][''Response Data''][''Drive {#SLOT} - Detailed Information''][''Drive {#SLOT} State''][''Other Error Count'']'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.pdsinfo]'
              tags:
                - tag: Application
                  value: 'LSI Physical disks'
            - uuid: d6e5da32420146529d49ac5fda629133
              name: 'Physical disk "{#SLOT}" predictive failure count'
              type: DEPENDENT
              key: 'lsi.pd.predicterrcount.["{#SLOT}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CONTROLLER}][''Response Data''][''Drive {#SLOT} - Detailed Information''][''Drive {#SLOT} State''][''Predictive Failure Count'']'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.pdsinfo]'
              tags:
                - tag: Application
                  value: 'LSI Physical disks'
              trigger_prototypes:
                - uuid: e388301444f04f9f9e890324e137768a
                  expression: 'last(/Template LSI json discovery/lsi.pd.predicterrcount.["{#SLOT}"],#2)>0 and (last(/Template LSI json discovery/lsi.pd.predicterrcount.["{#SLOT}"],#1)<>last(/Template LSI json discovery/lsi.pd.predicterrcount.["{#SLOT}"],#2))=1'
                  recovery_mode: RECOVERY_EXPRESSION
                  recovery_expression: 'last(/Template LSI json discovery/lsi.pd.predicterrcount.["{#SLOT}"])=0'
                  name: 'LSI: physical disk "{#SLOT}" predictive failure count is "{ITEM.VALUE}". Growing up'
                  priority: HIGH
                  manual_close: 'YES'
                  tags:
                    - tag: PDSLOT
                      value: '{#SLOT}'
                    - tag: PDSN
                      value: '{#PDSN}'
                    - tag: PD_CAPACITY
                      value: '{#CAPACITY}'
                    - tag: PD_MODEL
                      value: '{#MODEL}'
                    - tag: PD_TYPE
                      value: '{#PDTYPE}'
                    - tag: SOURCE
                      value: 'LSI PD prefailures'
                - uuid: e45e8894136a4cefa43691bfaaf7fc8a
                  expression: 'last(/Template LSI json discovery/lsi.pd.predicterrcount.["{#SLOT}"])>0'
                  recovery_mode: NONE
                  name: 'LSI: physical disk "{#SLOT}" predictive failure count is not null: "{ITEM.LASTVALUE}"'
                  priority: WARNING
                  manual_close: 'YES'
                  tags:
                    - tag: PDSLOT
                      value: '{#SLOT}'
                    - tag: PDSN
                      value: '{#PDSN}'
                    - tag: PD_CAPACITY
                      value: '{#CAPACITY}'
                    - tag: PD_MODEL
                      value: '{#MODEL}'
                    - tag: PD_TYPE
                      value: '{#PDTYPE}'
                    - tag: SOURCE
                      value: 'LSI PD prefailures'
            - uuid: 56b9a8edd569451fa26570a9dda6b3fd
              name: 'Physical disk "{#SLOT}" size'
              type: DEPENDENT
              key: 'lsi.pd.size.["{#SLOT}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CONTROLLER}][''Response Data''][''Drive {#SLOT}''][0][''Size'']'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.pdsinfo]'
              tags:
                - tag: Application
                  value: 'LSI Physical disks'
            - uuid: d11d6416a0e04e48adae11a370dd9888
              name: 'Physical disk "{#SLOT}" SMART flag'
              type: DEPENDENT
              key: 'lsi.pd.smartflag.["{#SLOT}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CONTROLLER}][''Response Data''][''Drive {#SLOT} - Detailed Information''][''Drive {#SLOT} State''][''S.M.A.R.T alert flagged by drive'']'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
              master_item:
                key: 'ssh.run[lsi.pdsinfo]'
              tags:
                - tag: Application
                  value: 'LSI Physical disks'
              trigger_prototypes:
                - uuid: 9efdcc4b7cbd42a18f8dec7520d17723
                  expression: 'find(/Template LSI json discovery/lsi.pd.smartflag.["{#SLOT}"],,"like","Yes")=1'
                  name: 'LSI: physical disk: SMART flag was raised up on "{#SLOT}"'
                  priority: HIGH
                  manual_close: 'YES'
                  tags:
                    - tag: PDSLOT
                      value: '{#SLOT}'
                    - tag: PDSN
                      value: '{#PDSN}'
                    - tag: PD_CAPACITY
                      value: '{#CAPACITY}'
                    - tag: PD_MODEL
                      value: '{#MODEL}'
                    - tag: PD_TYPE
                      value: '{#PDTYPE}'
                    - tag: SOURCE
                      value: 'LSI PD SMART flag'
            - uuid: d6a736176494436885cb97156b653103
              name: 'Physical disk "{#SLOT}" serial number'
              type: DEPENDENT
              key: 'lsi.pd.sn.["{#SLOT}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: NOT_MATCHES_REGEX
                  parameters:
                    - '^N\/A?'
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CONTROLLER}][''Response Data''][''Drive {#SLOT} - Detailed Information''][''Drive {#SLOT} Device attributes''][''SN'']'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
                - type: TRIM
                  parameters:
                    - '\s*'
              master_item:
                key: 'ssh.run[lsi.pdsinfo]'
              tags:
                - tag: Application
                  value: 'LSI Physical disks'
              trigger_prototypes:
                - uuid: e6545e6d73164b318e374848ec95f9c4
                  expression: '(last(/Template LSI json discovery/lsi.pd.sn.["{#SLOT}"],#1)<>last(/Template LSI json discovery/lsi.pd.sn.["{#SLOT}"],#2))=1 and length(last(/Template LSI json discovery/lsi.pd.sn.["{#SLOT}"]))>0'
                  name: 'LSI: physical disk "{#SLOT}" was replaced by sn  "{ITEM.LASTVALUE}"'
                  priority: INFO
                  manual_close: 'YES'
                  tags:
                    - tag: ACTION
                      value: 'Close with API'
                    - tag: PD_CAPACITY
                      value: '{#CAPACITY}'
                    - tag: PD_MODEL
                      value: '{#MODEL}'
                    - tag: PD_TYPE
                      value: '{#PDTYPE}'
                    - tag: SOURCE
                      value: 'LSI PD replace'
                    - tag: TEST
                      value: 'YES'
            - uuid: 95a12c635bde4f93b588988304f1db9d
              name: 'Physical disk "{#SLOT}" state'
              type: DEPENDENT
              key: 'lsi.pd.state.["{#SLOT}"]'
              delay: '0'
              history: '{$DEFAULT_HISTORY_PERIOD}'
              trends: '0'
              value_type: TEXT
              preprocessing:
                - type: CHECK_NOT_SUPPORTED
                  parameters:
                    - ''
                  error_handler: CUSTOM_VALUE
                  error_handler_params: NODATA
                - type: JSONPATH
                  parameters:
                    - '$[''Controllers''][{#CONTROLLER}][''Response Data''][''Drive {#SLOT}''][0][''State'']'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
                - type: JAVASCRIPT
                  parameters:
                    - |
                      switch(value)
                      {
                      case 'Onln':
                      value='Online';
                      break;
                      case 'Ugood':
                      value='Unconfigured-Good';
                      break;
                      case 'UGood':
                      value='Unconfigured-Good';
                      break;
                      case 'Ubad':
                      value='Unconfigured-Bad';
                      break;
                      case 'UBad':
                      value='Unconfigured-Bad';
                      break;
                      case 'Msng':
                      value='Missing';
                      break;
                      case 'Offln':
                      value='Offline';
                      break;
                      case 'F':
                      value='Foreign';
                      break;
                      case 'GHS':
                      value='Global Hot Spare';
                      break;
                      case 'DHS':
                      value='Dedicated Hot Spare';
                      break;
                      case 'Rbld':
                      value='Rebuild';
                      break;
                      }
                      return value
              master_item:
                key: 'ssh.run[lsi.pdsinfo]'
              tags:
                - tag: Application
                  value: 'LSI Physical disks'
              trigger_prototypes:
                - uuid: 60a1c6aea55a4b2784929a8892027eac
                  expression: 'find(/Template LSI json discovery/lsi.pd.state.["{#SLOT}"],,"iregexp","Unconfigured-Bad")=1'
                  name: 'LSI: physical disk "{#SLOT}" is "Unconfigured-Bad"'
                  priority: HIGH
                  manual_close: 'YES'
                  tags:
                    - tag: PDSLOT
                      value: '{#SLOT}'
                    - tag: PDSN
                      value: '{#PDSN}'
                    - tag: PD_CAPACITY
                      value: '{#CAPACITY}'
                    - tag: PD_MODEL
                      value: '{#MODEL}'
                    - tag: PD_TYPE
                      value: '{#PDTYPE}'
                    - tag: SOURCE
                      value: 'LSI PD state'
                    - tag: TEST
                      value: 'YES'
                - uuid: 37010864c34a46419b397e5f4e84310d
                  expression: 'find(/Template LSI json discovery/lsi.pd.state.["{#SLOT}"],,"iregexp","{$PD_HIGH_SEVERITY_STATES}")=1'
                  name: 'LSI: physical disk "{#SLOT}" is "{ITEM.VALUE}"'
                  priority: HIGH
                  manual_close: 'YES'
                  tags:
                    - tag: PDSLOT
                      value: '{#SLOT}'
                    - tag: PDSN
                      value: '{#PDSN}'
                    - tag: PD_CAPACITY
                      value: '{#CAPACITY}'
                    - tag: PD_MODEL
                      value: '{#MODEL}'
                    - tag: PD_TYPE
                      value: '{#PDTYPE}'
                    - tag: SOURCE
                      value: 'LSI PD state'
                - uuid: 667a063b7fc94c00bb1540c48e86f62d
                  expression: 'find(/Template LSI json discovery/lsi.pd.state.["{#SLOT}"],,"iregexp","NODATA")=1'
                  name: 'LSI: physical disk "{#SLOT}" no data (not discovered)'
                  priority: HIGH
                  manual_close: 'YES'
                  tags:
                    - tag: PDSLOT
                      value: '{#SLOT}'
                    - tag: PDSN
                      value: '{#PDSN}'
                    - tag: PD_CAPACITY
                      value: '{#CAPACITY}'
                    - tag: PD_MODEL
                      value: '{#MODEL}'
                    - tag: PD_TYPE
                      value: '{#PDTYPE}'
                    - tag: SOURCE
                      value: 'LSI PD NODATA'
                - uuid: b78fb92809c24acfb9cad0d17c61e393
                  expression: 'find(/Template LSI json discovery/lsi.pd.state.["{#SLOT}"],,"iregexp","Rebuild")=1'
                  name: 'LSI: physical disk "{#SLOT}" state is "{ITEM.VALUE}"'
                  priority: INFO
                  manual_close: 'YES'
                  tags:
                    - tag: PDSLOT
                      value: '{#SLOT}'
                    - tag: PDSN
                      value: '{#PDSN}'
                    - tag: PD_CAPACITY
                      value: '{#CAPACITY}'
                    - tag: PD_MODEL
                      value: '{#MODEL}'
                    - tag: PD_TYPE
                      value: '{#PDTYPE}'
                    - tag: SOURCE
                      value: 'LSI PD state'
                - uuid: 4786508fc4844438afbbffe1207f3fbd
                  expression: 'find(/Template LSI json discovery/lsi.pd.state.["{#SLOT}"],#1,"like","Unconfigured-Good")=1 and find(/Template LSI json discovery/lsi.pd.state.["{#SLOT}"],#2,"like","Optimal")=1'
                  name: 'LSI: physical disk "{#SLOT}" state was changed from "Optimal" to "Unconfigured-Good"'
                  priority: WARNING
                  manual_close: 'YES'
                  tags:
                    - tag: PDSLOT
                      value: '{#SLOT}'
                    - tag: PDSN
                      value: '{#PDSN}'
                    - tag: PD_CAPACITY
                      value: '{#CAPACITY}'
                    - tag: PD_MODEL
                      value: '{#MODEL}'
                    - tag: PD_TYPE
                      value: '{#PDTYPE}'
                    - tag: SOURCE
                      value: 'LSI PD state'
          master_item:
            key: lsi.SMART.lld
          lld_macro_paths:
            - lld_macro: '{#CAPACITY}'
              path: '$.[''Size'']'
            - lld_macro: '{#CONTROLLER}'
              path: '$.[''Controller number'']'
            - lld_macro: '{#DG}'
              path: '$.[''Disk group'']'
            - lld_macro: '{#MODEL}'
              path: '$.[''Model'']'
            - lld_macro: '{#PDSN}'
              path: '$.[''Serial Number'']'
            - lld_macro: '{#PDTYPE}'
              path: '$.[''Type'']'
            - lld_macro: '{#SLOT}'
              path: '$.[''SLOT'']'
      tags:
        - tag: APP
          value: 'LSI (Perc) storage controller'
      macros:
        - macro: '{$ADAP_BATTERY_REQUEST_PERIOD}'
          value: 10m
        - macro: '{$ADAP_DISCOVERY_PERIOD}'
          value: 10m
        - macro: '{$ADAP_HISTORY_PERIOD}'
          value: 30d
        - macro: '{$ADAP_REQUEST_PERIOD}'
          value: 1h
        - macro: '{$ADAP_THROTTLING_HB_PERIOD}'
          value: 10m
        - macro: '{$DEFAULT_ITEM_THROTTLING_PERIOD}'
          value: 5m
        - macro: '{$DEFAULT_KLR_PERIOD}'
          value: 6h
        - macro: '{$DEFAULT_LLD_THROTTLING_HB_PERIOD}'
          value: 10m
        - macro: '{$LD_DISCOVERY_PERIOD}'
          value: 6h
        - macro: '{$LD_HISTORY_PERIOD}'
          value: 30d
        - macro: '{$LD_KLR_PERIOD}'
          value: 1h
        - macro: '{$LD_RECOVERY_STATES}'
          value: Opt|OK
        - macro: '{$LD_REQUEST_PERIOD}'
          value: 5m
        - macro: '{$LD_THROTTLING_HB_PERIOD}'
          value: 10m
        - macro: '{$LSI_CLI}'
          value: storcli64
        - macro: '{$LSI_PD_COMMAND}'
          value: /call/eall/sall
        - macro: '{$PD_DISCOVERY_PERIOD}'
          value: 30m
        - macro: '{$PD_HIGH_SEVERITY_STATES}'
          value: Missing|Offline|Foreign|Failed
        - macro: '{$PD_HISTORY_PERIOD}'
          value: 30d
        - macro: '{$PD_KLR_PERIOD}'
          value: 1d
        - macro: '{$PD_REQUEST_PERIOD}'
          value: 5m
        - macro: '{$PD_THROTTLING_HB_PERIOD}'
          value: 10m
